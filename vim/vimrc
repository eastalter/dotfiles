" シンタックスハイライトを有効化
syntax enable

" 基本設定
set number " 行番号表示
set nobackup
set showmatch
set ignorecase
set smartcase
set wrapscan
set scrolloff=5
set hlsearch
set shiftwidth=2
set tabstop=2
set autoindent
set ruler
set smartindent
set clipboard=unnamed,autoselect
set completeopt=menuone
set backspace=start,eol,indent
" 0から始まる数字も10進数として認識
set nrformats=
" 全角文字に対応
set ambiwidth=double

" ステータスラインを常に表示．フォーマットはlightline.vimによる．
set laststatus=2
" デフォルトの--insert--的な表示を消す
set noshowmode




" ':e <file>' で新規ファイルを開く時のサジェストを良くする
set wildmenu
set wildignore+=*.dll,*.o,*.pyc,*.bak,*.exe,*.jpg,*.jpeg,*.png,*.gif,*$py.class,*.class,*/*.dSYM/*,*.dylib
set wildmode=list:full

" 行末までヤンク
nnoremap Y y$

" <C-j>で<esc>の代わり
inoremap <C-j> <esc>

" 行頭・行末への移動のマッピング
noremap <S-h> ^
noremap <S-l> $

" ノーマルモードでもEnterで改行
noremap <CR> i<CR><ESC>

" 検索結果のハイライトをEsc連打でクリアする
nnoremap <ESC><ESC> :nohlsearch<CR>

" 論理行移動と表示行移動を反転
nnoremap k gk
nnoremap j gj
nnoremap gk k
nnoremap gj j

" vimの複数ファイルをサクサク移動する Tip36
nnoremap <silent> [b :bp<CR>
nnoremap <silent> ]b :bn<CR>
nnoremap <silent> [B :bf<CR>
nnoremap <silent> ]B :bl<CR>


" python settings
" 新規ファイル作成時に自動で書く
autocmd BufNewFile *.py 0r $HOME/dotfiles/vim/templates/python.txt

" PrevimOpenの設定
au BufRead,BufNewFile *.md set filetype=markdown
let g:previm_open_cmd = 'open -a Google\ Chrome'
" markdownの折りたたみをなくす
let g:vim_markdown_folding_disabled=1

" deinの設定
if &compatible
	set nocompatible
endif


" プラグインをインストールするディレクトリ
let s:dein_dir = expand('~/dotfiles/vim/.cache/dein')
" dein.vim の場所
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'

" dein.vim がなければ設定する
if &runtimepath !~# '/dein.vim'
  if !isdirectory(s:dein_repo_dir)
    execute '!git clone https://github.com/Shougo/dein.vim' s:dein_repo_dir
  endif
  execute 'set runtimepath^=' . fnamemodify(s:dein_repo_dir, ':p')
endif

call dein#begin(expand(s:dein_dir))
call dein#add('bronson/vim-trailing-whitespace') "文末の空白文字を可視化
" 括弧挿入の強化
" ビジュアルモードで選択したものに対して: S[記号] -> 選択範囲を記号で囲む
" ys[範囲][記号] -> 記号で範囲を囲む: e.g. ysiw" -> カーソル上の単語を " で囲む
" cs[記号] -> 記号を置換
" ds[記号] -> 記号を削除
call dein#add('tpope/vim-surround')
" gc{motion}でコメント化
call dein#add('tpope/vim-commentary')
" {motion}にファイル全体を対象とするieとaeを追加．
call dein#add('kana/vim-textobj-user')
call dein#add('kana/vim-textobj-entire')
" colorschemeにicebergを追加
call dein#add('cocopon/iceberg.vim')
" ステータスライン表示
call dein#add('itchyny/lightline.vim')
" PrevimOpenの設定
call dein#add('plasticboy/vim-markdown')
call dein#add('kannokanno/previm')
call dein#add('tyru/open-browser.vim')
" 補完の設定
call dein#add('Shougo/neocomplete.vim')
let g:neocomplete#enable_at_startup = 1
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
call dein#end()
filetype plugin indent on
" インストールしてないものを自動インストール
if dein#check_install()
	call dein#install()
endif

" ペースト時にautoindentが働かないようにする
if &term =~ "xterm"
	let &t_SI .= "\e[?2004h"
	let &t_EI .= "\e[?2004l"
	let &pastetoggle = "\e[201~"

	function XTermPasteBegin(ret)
		set paste
		return a:ret
	endfunction

	inoremap <special> <expr> <Esc>[200~ XTermPasteBegin("")
endif

" coloeschemeをicebergに変更
autocmd ColorScheme * highlight Normal ctermbg=none
autocmd ColorScheme * highlight Nontext ctermbg=none
autocmd ColorScheme * highlight LineNr ctermbg=none
autocmd ColorScheme * highlight EndOfBuffer ctermbg=none
colorscheme iceberg
